name: "Build"
on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - "main"

jobs:
  validation:
    name: Gradle Wrapper Validation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@v1

  build-jvm-matrix:
    name: "Setup JVM Matrix"
    runs-on: ubuntu-latest
    steps: # https://michaelheap.com/dynamic-matrix-generation-github-actions/
      - id: set-matrix
        name: Setup Java Versions Matrix
        run: echo "version_matrix=$(curl https://endoflife.date/api/oracle-jdk.json | jq -c '[.[] | select(.extendedSupport > (now | strftime("%Y-%m-%d"))) | .cycle]' | sed 's/ //g')" >> $GITHUB_OUTPUT
      - name: Verify Java Versions Matrix
        run: echo "The selected java versions are ${{ steps.set-matrix.outputs.version_matrix }}"
    outputs:
      version_matrix: ${{ steps.set-matrix.outputs.version_matrix }}

  build:
    name: "Build & Test"
    needs: build-jvm-matrix
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        java_version: ${{ fromJson(needs.build-jvm-matrix.outputs.version_matrix) }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configure Pagefile If Windows
        if: ${{ matrix.os  == 'windows-latest' }}
        uses: al-cheb/configure-pagefile-action@v1.3
        with:
          minimum-size: 8GB
          maximum-size: 8GB
          disk-root: "D:"
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: ${{ matrix.java_version }}
          cache: "gradle"
      - name: Build & Test
        run: ./gradlew build --no-daemon
      - name: Upload Test Results
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: test-results-${{ runner.os }}
          path: plugin/build/reports/tests/test/
      - name: Upload Memory Dump
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: memory-dump-${{ runner.os }}
          path: |
            hs_err_pid*
            replay_pid*
            plugin/hs_err_pid*
            plugin/replay_pid*