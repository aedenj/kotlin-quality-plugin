name: "Build"
on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - "main"

permissions:
  contents: read

jobs:
  validation:
    name: Gradle Wrapper Validation
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@5c7944e73c4c2a096b17a9cb74d65b6c2bbafbde # v2.9.1
        with:
          egress-policy: audit

      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@f9c9c575b8b21b6485636a91ffecd10e558c62f6 # v3.5.0

  build-jvm-matrix:
    name: "Setup JVM Matrix"
    runs-on: ubuntu-latest
    steps: # https://michaelheap.com/dynamic-matrix-generation-github-actions/
      - name: Harden Runner
        uses: step-security/harden-runner@5c7944e73c4c2a096b17a9cb74d65b6c2bbafbde # v2.9.1
        with:
          egress-policy: audit

      - id: set-matrix
        name: Setup Java Versions Matrix
        run: echo "version_matrix=$(curl https://endoflife.date/api/oracle-jdk.json | jq -c '[.[] | select(.extendedSupport > (now | strftime("%Y-%m-%d")) and ((.cycle | tonumber) < 21)) | .cycle]' | sed 's/ //g')" >> $GITHUB_OUTPUT
      - name: Verify Java Versions Matrix
        run: echo "The selected java versions are ${{ steps.set-matrix.outputs.version_matrix }}"
    outputs:
      version_matrix: ${{ steps.set-matrix.outputs.version_matrix }}

  build:
    name: "Build & Test"
    needs: build-jvm-matrix
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        java_version: ${{ fromJson(needs.build-jvm-matrix.outputs.version_matrix) }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@5c7944e73c4c2a096b17a9cb74d65b6c2bbafbde # v2.9.1
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: Configure Pagefile If Windows
        if: ${{ matrix.os  == 'windows-latest' }}
        uses: al-cheb/configure-pagefile-action@a3b6ebd6b634da88790d9c58d4b37a7f4a7b8708 # v1.4
        with:
          minimum-size: 8GB
          maximum-size: 8GB
          disk-root: "D:"
      - name: Setup Java
        uses: actions/setup-java@6a0805fcefea3d4657a47ac4c165951e33482018 # v4.2.2
        with:
          distribution: "zulu"
          java-version: ${{ matrix.java_version }}
          cache: "gradle"
      - name: Build & Test
        run: ./gradlew build --no-daemon
      - name: Upload Test Results
        uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a # v4.3.6
        if: failure()
        with:
          name: test-results-${{ runner.os }}
          path: plugin/build/reports/tests/test/
      - name: Upload Memory Dump
        uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a # v4.3.6
        if: failure()
        with:
          name: memory-dump-${{ runner.os }}
          path: |
            hs_err_pid*
            replay_pid*
            plugin/hs_err_pid*
            plugin/replay_pid*